# This script bootstraps the runtime environment to the standard state.
#
# This script must never throw an exception, or the runtime will panic.

# Pre-define the global modules table.
# table-set $GLOBALS modules [
#     loaders: [] # A list of loader functions.
#     loaded: [:] # A table mapping module names to the loaded object.
# ]

def fs (require fs)
def lang (require lang)
def process (require process)

table-set $GLOBALS read $fs->read
table-set $GLOBALS write $fs->write

table-set $GLOBALS print $lang->print
table-set $GLOBALS println $lang->println
table-set $GLOBALS echo $lang->println
table-set $GLOBALS dump $lang->dump
table-set $GLOBALS eq $lang->eq

table-set $GLOBALS command $process->command

table-set $GLOBALS eval <string> {
    call $source $string
}

def require-x <module> {
    send $GLOBALS->modules->loaders | map {
        call $0 $module
    } | filter {
        nil? $0
    } | head
}

table-set $GLOBALS ls {
    (require process)->command ls -l
}
