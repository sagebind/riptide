# This script bootstraps the runtime environment to the standard state.
#
# This script must never throw an exception, or the runtime will panic.

# Pre-define the global modules table.
# table-set $GLOBALS modules [
#     loaders: [] # A list of loader functions.
#     loaded: [:] # A table mapping module names to the loaded object.
# ]

$fs = (require std/fs)
$lang = (require std/lang)
$process = (require std/process)

$GLOBALS->read = $fs->read
$GLOBALS->write = $fs->write

$GLOBALS->print = $lang->print
$GLOBALS->println = $lang->println
$GLOBALS->echo = $lang->println
$GLOBALS->dump = $lang->dump
$GLOBALS->eq = $lang->eq

$GLOBALS->command = $process->command

$GLOBALS->eval = <string> {
    call $source $string
}

def require-x <module> {
    send $GLOBALS->modules->loaders | map {
        call $0 $module
    } | filter {
        nil? $0
    } | head
}

$GLOBALS->ls = {
    $process->command ls -l
}
